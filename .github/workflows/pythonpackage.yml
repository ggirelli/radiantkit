name: Python package

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1.1.1
    - name: Load cached venv (poetry)
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: poetry install
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
    - name: Check with mypy and flake8
      uses: ricardochaves/python-lint@v1.3.0
      with:
        python-root-list: "."
        use-pylint: false
        use-pycodestyle: false
        use-flake8: true
        use-black: false
        use-mypy: true
        use-isort: false
        extra-pylint-options: ""
        extra-pycodestyle-options: ""
        extra-flake8-options: "--count --select=E9,F63,F7,F82 --show-source --exit-zero --max-complexity=5 --max-line-length=88 --ignore=E203 --statistics"
        extra-black-options: ""
        extra-mypy-options: ""
        extra-isort-options: ""
    - name: Check with black
      uses: lgeiger/black-action@v1.0.1
      with:
        args: ". --check"
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
